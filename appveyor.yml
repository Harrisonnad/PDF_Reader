version: 0.0.{build}
image:
 - Visual Studio 2017
 - Ubuntu

environment:
  APPVEYOR_YML_DISABLE_PS_LINUX: true

  matrix:
    - PYTHON: C:\Python36-x64
      PYTHON_VERSION: "3.6"
      PYTHON_ARCH: "64"

install:
  # If there is a newer build queued for the same PR, cancel this one.
  # The AppVeyor 'rollout builds' option is supposed to serve the same
  # purpose but it is problematic because it tends to cancel builds pushed
  # directly to master instead of just PR builds (or the converse).
  # credits: JuliaLang developers.
  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
        https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
        Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
          throw "There are newer queued builds for this pull request, failing early." }

  # Install Python (from the official .msi of https://python.org) and pip when
  # not already installed.
  - ps: if (-not(Test-Path($env:PYTHON))) { & appveyor\install.ps1 }


  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - cmd: "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  # Check that we have the expected version and architecture for Python
  - cmd: "python --version"
  - sh: "python3 --version"

  # Upgrade to the latest version of pip to avoid it displaying warnings
  # about it being out of date.
  - cmd: "python -m pip install --upgrade pip"
  - sh: "sudo apt-get install python3-pip -y"
  - sh: "python3 -m pip install --upgrade pip"

  # Add scripts install directory to path
  - sh: "export PATH=$HOME/.local/bin:$PATH"

  # Install the build dependencies of the project. If some dependencies contain
  # compiled extensions and are not provided as pre-built wheel packages,
  # pip will build them from source using the MSVC compiler matching the
  # target Python version and architecture
  - cmd: "%CMD_IN_ENV% pip install -r requirements.txt"
  - sh: "python3 -m pip install -r requirements.txt"

build_script:
  - cmd: "pyinstaller --onefile analyzer.spec"
  - sh: "pyinstaller --onefile analyzer.spec"

artifacts:
  - path: /dist/*.exe
    name: AnalyzerExe

  - path: /dist/pdf_reader
    name: PDF_Reader